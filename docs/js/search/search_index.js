var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.119,1,1.934]],["body/dependencies.html",[1,2.083,2,3.245,3,0.066,4,4.731,5,2.083,6,3.245,7,0.715,8,3.998,9,2.567,10,3.245,11,3.245,12,2.083,13,3.245,14,3.245,15,3.245,16,3.245,17,3.245,18,3.245,19,3.245,20,3.245,21,0.054,22,0.054]],["title/index.html",[23,1.662,24,1.361,25,0.467]],["body/index.html",[3,0.067,7,0.552,9,1.059,12,2.459,21,0.034,22,0.034,24,1.059,26,1.649,27,3.83,28,1.153,29,1.649,30,2.505,31,1.649,32,3.383,33,2.505,34,2.505,35,2.853,36,1.964,37,1.064,38,1.13,39,1.608,40,1.649,41,1.059,42,1.649,43,1.649,44,0.884,45,0.552,46,0.669,47,1.649,48,1.964,49,1.649,50,1.649,51,1.649,52,1.649,53,1.623,54,3.122,55,0.261,56,3.029,57,1.649,58,1.649,59,1.342,60,1.649,61,1.649,62,1.649,63,1.649,64,1.293,65,1.649,66,1.649,67,1.649,68,1.649,69,1.649,70,3.029,71,1.153,72,1.293,73,3.029,74,0.972,75,1.649,76,1.649,77,1.649,78,3.004,79,2.505,80,1.649,81,2.505,82,2.505,83,1.964,84,1.293,85,1.649,86,3.383,87,1.649,88,2.505,89,1.649,90,1.649,91,1.649,92,1.649,93,1.293,94,0.744,95,1.649,96,2.505,97,1.649,98,1.649,99,1.649,100,1.649,101,2.505,102,1.649,103,1.649,104,1.649,105,1.649,106,1.649,107,2.505,108,1.649,109,1.649,110,1.649,111,1.649,112,1.649,113,1.649,114,1.649,115,1.649,116,2.505,117,1.649,118,1.649,119,1.293,120,1.293,121,1.649,122,1.649,123,1.293,124,3.029,125,1.649,126,1.649,127,1.649,128,1.649,129,1.649,130,1.649,131,2.505,132,1.649,133,1.649,134,1.649,135,1.649,136,1.649]],["title/overview.html",[137,2.659]],["body/overview.html",[1,2.268,3,0.056,21,0.056,22,0.056,28,1.602,36,2.77,45,0.778,48,2.77,55,0.368,94,1.594,119,2.77,137,2.77,138,3.533,139,3.533,140,3.533,141,4.21,142,3.533,143,2.77,144,0.778]],["title/license.html",[23,1.662,24,1.361,145,1.662]],["body/license.html",[3,0.046,21,0.046,22,0.046,35,2.699,72,2.016,93,2.016,94,1.16,120,2.016,143,2.016,145,2.016,146,3.442,147,3.881,148,2.571,149,2.571,150,2.571,151,2.571,152,3.442,153,2.571,154,2.571,155,2.571,156,3.442,157,2.571,158,4.145,159,4.675,160,2.571,161,2.016,162,0.566,163,3.442,164,3.881,165,2.571,166,3.881,167,3.442,168,2.571,169,2.571,170,2.571,171,2.571,172,2.571,173,2.571,174,2.571,175,2.571,176,2.571,177,2.571,178,2.571,179,2.571,180,2.571,181,3.442,182,3.442,183,2.571,184,2.571,185,3.442,186,2.571,187,2.571,188,2.571,189,2.571,190,2.571,191,2.571,192,2.571,193,2.571,194,2.571,195,2.571,196,2.571,197,2.571,198,2.571,199,2.571,200,2.571,201,2.571,202,2.571,203,2.571,204,2.571,205,2.571,206,2.571]],["title/modules.html",[28,1.29]],["body/modules.html",[3,0.059,21,0.059,22,0.059,28,1.436,38,1.703,207,3.774,208,2.96,209,3.774]],["title/modules/WebBluetoothModule.html",[28,0.957,38,1.134]],["body/modules/WebBluetoothModule.html",[3,0.068,5,1.486,7,0.51,21,0.043,22,0.043,28,0.88,37,1.151,38,1.658,39,2.36,41,1.486,45,0.917,46,0.618,53,1.717,59,1.24,74,1.113,94,1.79,144,0.51,162,0.51,210,0.741,211,0.741,212,1.24,213,2.513,214,1.814,215,1.176,216,2.513,217,1.814,218,1.585,219,1.814,220,1.176,221,1.026,222,1.814,223,1.97,224,1.814,225,1.658,226,2.547,227,1.486,228,1.814,229,1.97,230,1.814,231,1.814,232,2.513,233,1.814,234,1.24,235,1.814]],["title/injectables/BrowserWebBluetooth.html",[55,0.262,218,0.957]],["body/injectables/BrowserWebBluetooth.html",[3,0.066,7,0.603,9,1.758,12,1.758,21,0.048,22,0.048,25,0.603,37,0.731,45,0.603,46,0.731,55,0.418,64,3.139,71,1.366,74,0.959,123,2.147,162,0.603,210,0.876,211,0.876,215,1.149,218,1.366,236,2.147,237,2.814,238,4.003,239,4.249,240,3.589,241,1.523,242,3.589,243,3.589,244,4.003,245,2.737,246,1.235,247,1.235,248,0.731,249,3.589,250,3.589,251,2.737,252,2.737,253,2.737,254,2.737,255,2.737,256,2.737,257,2.737,258,2.737]],["title/injectables/ConsoleLoggerService.html",[55,0.262,220,0.805]],["body/injectables/ConsoleLoggerService.html",[3,0.067,7,0.541,21,0.045,22,0.045,25,0.541,37,0.656,44,1.789,45,0.835,46,0.892,55,0.424,71,1.27,74,1.013,144,0.541,162,0.541,210,0.786,211,0.786,215,1.214,220,1.068,221,0.786,241,1.443,246,1.711,247,1.711,248,1.013,259,1.316,260,2.143,261,2.143,262,2.435,263,2.456,264,2.818,265,2.818,266,2.435,267,2.456,268,2.435,269,2.456,270,1.711,271,1.577,272,2.435,273,1.577,274,1.577,275,2.143,276,1.577,277,1.577,278,1.577]],["title/injectables/NoLoggerService.html",[55,0.262,221,0.805]],["body/injectables/NoLoggerService.html",[3,0.067,7,0.541,21,0.045,22,0.045,25,0.541,37,0.656,44,1.789,45,0.835,46,0.892,55,0.424,71,1.27,74,1.013,144,0.541,162,0.541,210,0.786,211,0.786,215,1.214,220,0.786,221,1.068,241,1.443,246,1.711,247,1.711,248,1.013,259,1.316,260,2.143,261,2.143,262,2.435,264,2.818,265,2.818,266,2.435,268,2.435,270,1.711,271,1.577,272,2.435,273,1.577,274,1.577,275,2.143,276,1.577,277,1.577,278,1.577,279,2.456,280,2.456,281,2.456]],["title/injectables/ServerWebBluetooth.html",[55,0.262,282,1.614]],["body/injectables/ServerWebBluetooth.html",[3,0.066,7,0.702,21,0.053,22,0.053,25,0.702,37,0.852,45,0.702,46,0.852,55,0.448,59,2.304,71,1.505,74,1.057,162,0.702,210,1.02,211,1.02,241,1.213,282,2.539,283,2.499,284,4.495,285,3.187,286,3.187,287,2.499,288,3.187]],["title/interfaces/AWBOptions.html",[144,0.554,223,1.347]],["body/interfaces/AWBOptions.html",[3,0.068,5,1.421,7,0.488,21,0.042,22,0.042,25,0.488,37,1.136,38,1.402,39,2.305,41,2.499,45,0.903,46,0.592,53,1.665,59,1.186,74,1.095,94,1.756,144,0.684,162,0.488,210,0.709,211,0.709,212,1.186,213,2.436,214,1.736,215,1.312,216,2.436,217,1.736,218,1.56,219,1.736,220,1.149,221,0.994,222,1.736,223,2.086,224,2.815,225,1.619,226,2.499,227,1.421,228,1.736,229,1.924,230,1.736,231,1.736,232,2.436,233,1.736,234,1.186,235,1.736,237,2.436,241,0.842,248,0.592,289,2.214]],["title/interfaces/Logger.html",[144,0.554,270,1.134]],["body/interfaces/Logger.html",[3,0.067,7,0.53,21,0.044,22,0.044,25,0.53,37,0.643,44,1.764,45,0.826,46,0.88,55,0.391,71,1.253,74,1.003,144,0.725,162,0.53,210,0.77,211,0.77,215,1.201,220,0.77,221,0.77,241,1.428,246,1.693,247,1.693,248,1.003,259,1.29,260,2.114,261,2.114,262,2.114,264,2.8,265,2.8,266,2.114,268,2.114,270,1.82,271,2.114,272,2.961,273,2.114,274,2.114,275,2.114,276,1.545,277,1.545,278,1.545,290,2.407,291,2.407,292,2.407]],["title/miscellaneous/functions.html",[225,1.359,293,1.136]],["body/miscellaneous/functions.html",[3,0.06,21,0.056,22,0.056,25,0.767,212,1.865,215,1.336,218,1.701,225,1.57,227,2.235,229,2.395,234,2.236,246,1.57,247,1.57,248,0.93,293,1.865,294,4.173]],["title/miscellaneous/variables.html",[293,1.136,295,1.934]],["body/miscellaneous/variables.html",[3,0.068,21,0.022,22,0.022,25,0.213,54,3.286,78,1.282,83,0.76,84,0.76,208,1.662,248,0.259,287,1.282,293,0.52,295,0.622,296,1.662,297,1.662,298,0.76,299,0.76,300,1.635,301,0.969,302,0.969,303,0.969,304,0.969,305,0.969,306,4.865,307,4.865,308,4.865,309,4.865,310,0.969,311,0.969,312,0.969,313,0.969,314,0.969,315,0.969,316,0.969,317,0.969,318,0.969,319,0.969,320,0.969,321,0.969,322,0.969,323,0.969,324,0.969,325,0.969,326,0.969,327,0.969,328,0.969,329,0.969,330,0.969,331,0.969,332,3.624,333,0.969,334,3.367,335,0.969,336,3.367,337,0.969,338,0.969,339,0.969,340,0.969,341,0.969,342,0.969,343,0.969,344,0.969,345,0.969,346,0.969,347,0.969,348,2.119,349,2.119,350,0.969,351,0.969,352,0.969,353,0.969,354,0.969,355,0.969,356,0.969,357,0.969,358,0.969,359,0.969,360,0.969,361,0.969,362,0.969,363,0.969,364,0.969,365,0.969,366,0.969,367,0.969,368,0.969,369,0.969,370,0.969,371,0.969,372,0.969,373,0.969,374,0.969,375,0.969,376,0.969,377,0.969,378,0.969,379,0.969,380,0.969,381,0.969,382,0.969,383,0.969,384,0.969,385,0.969,386,0.969,387,0.969,388,0.969,389,0.969,390,0.969,391,0.969,392,0.969,393,0.969,394,0.969,395,0.969,396,0.969,397,0.969,398,0.969,399,0.969,400,0.969,401,0.969,402,0.969,403,0.969,404,0.969,405,0.969,406,0.969,407,0.969,408,0.969]],["title/coverage.html",[409,2.659]],["body/coverage.html",[3,0.065,21,0.047,22,0.047,53,1.434,55,0.457,144,0.779,161,2.099,162,0.589,212,2.257,218,1.345,220,0.857,221,0.857,223,1.434,225,1.786,226,1.718,229,1.434,234,1.434,236,2.099,248,0.715,259,2.122,270,1.207,282,1.718,283,2.099,295,2.27,296,2.099,297,2.099,298,2.773,299,2.773,409,2.099,410,2.676,411,2.676,412,4.795,413,3.535,414,4.379,415,2.676,416,2.676,417,2.676,418,4.212,419,2.676,420,2.676]]],"invertedIndex":[["",{"_index":3,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"license.html":{},"modules.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"coverage.html":{}}}],["0",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["0.0.4",{"_index":13,"title":{},"body":{"dependencies.html":{}}}],["0.8.4",{"_index":20,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["000000000000",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":36,"title":{},"body":{"index.html":{},"overview.html":{}}}],["17",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":48,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.3",{"_index":16,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":149,"title":{},"body":{"license.html":{}}}],["3",{"_index":110,"title":{},"body":{"index.html":{}}}],["4",{"_index":114,"title":{},"body":{"index.html":{}}}],["4000",{"_index":307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":119,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.2.9",{"_index":4,"title":{},"body":{"dependencies.html":{}}}],["5.5.5",{"_index":18,"title":{},"body":{"dependencies.html":{}}}],["5/28",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["__register__",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_ble",{"_index":239,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["abov",{"_index":180,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":90,"title":{},"body":{"index.html":{}}}],["acceleromet",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":202,"title":{},"body":{"license.html":{}}}],["add",{"_index":31,"title":{},"body":{"index.html":{}}}],["address",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":173,"title":{},"body":{"license.html":{}}}],["angular",{"_index":29,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":5,"title":{},"body":{"dependencies.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["angular/compil",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":7,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["angular/platform",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["annot",{"_index":51,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":47,"title":{},"body":{"index.html":{}}}],["arg",{"_index":264,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["aris",{"_index":206,"title":{},"body":{"license.html":{}}}],["ask",{"_index":115,"title":{},"body":{"index.html":{}}}],["associ",{"_index":160,"title":{},"body":{"license.html":{}}}],["author",{"_index":195,"title":{},"body":{"license.html":{}}}],["avail",{"_index":208,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awbopt",{"_index":223,"title":{"interfaces/AWBOptions.html":{}},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"coverage.html":{}}}],["b000",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baromet",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["batteri",{"_index":83,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["battery_level",{"_index":61,"title":{},"body":{"index.html":{}}}],["battery_servic",{"_index":63,"title":{},"body":{"index.html":{}}}],["batterylevelservic",{"_index":58,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":113,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_primary_servic",{"_index":107,"title":{},"body":{"index.html":{}}}],["ble",{"_index":66,"title":{},"body":{"index.html":{}}}],["blog",{"_index":130,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":12,"title":{},"body":{"dependencies.html":{},"index.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth.servic",{"_index":217,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["bluetoothcor",{"_index":53,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"coverage.html":{}}}],["boolean",{"_index":224,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["bootstrap",{"_index":140,"title":{},"body":{"overview.html":{}}}],["brows",{"_index":209,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["browserwebbluetooth",{"_index":218,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["build",{"_index":128,"title":{},"body":{"index.html":{}}}],["c",{"_index":148,"title":{},"body":{"license.html":{}}}],["call",{"_index":70,"title":{},"body":{"index.html":{}}}],["can't",{"_index":89,"title":{},"body":{"index.html":{}}}],["case",{"_index":126,"title":{},"body":{"index.html":{}}}],["catch(",{"_index":121,"title":{},"body":{"index.html":{}}}],["cc2650",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characterist",{"_index":86,"title":{},"body":{"index.html":{}}}],["charg",{"_index":155,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":132,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":151,"title":{},"body":{"license.html":{}}}],["claim",{"_index":198,"title":{},"body":{"license.html":{}}}],["class",{"_index":46,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["commonmodul",{"_index":216,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["complet",{"_index":125,"title":{},"body":{"index.html":{}}}],["condit",{"_index":179,"title":{},"body":{"license.html":{}}}],["config",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":72,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('oop",{"_index":122,"title":{},"body":{"index.html":{}}}],["console.error.apply(consol",{"_index":277,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["console.log('get",{"_index":98,"title":{},"body":{"index.html":{}}}],["console.log.apply(consol",{"_index":276,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["console.warn.apply(consol",{"_index":278,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["consoleloggerservic",{"_index":220,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"modules/WebBluetoothModule.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["consoleloggerserviceconfig",{"_index":234,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["consoleloggerserviceconfig(opt",{"_index":227,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"index.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["contract",{"_index":203,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":135,"title":{},"body":{"index.html":{}}}],["control",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":158,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":147,"title":{},"body":{"license.html":{}}}],["core",{"_index":14,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":409,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current_used_paramet",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":199,"title":{},"body":{"license.html":{}}}],["data",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataview",{"_index":116,"title":{},"body":{"index.html":{}}}],["deal",{"_index":163,"title":{},"body":{"license.html":{}}}],["declar",{"_index":139,"title":{},"body":{"overview.html":{}}}],["default",{"_index":300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":241,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["dep",{"_index":235,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":257,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["develop",{"_index":92,"title":{},"body":{"index.html":{}}}],["devic",{"_index":73,"title":{},"body":{"index.html":{}}}],["device_id",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_inform",{"_index":304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disconnect_request",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discov",{"_index":101,"title":{},"body":{"index.html":{}}}],["discoveri",{"_index":103,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":171,"title":{},"body":{"license.html":{}}}],["document",{"_index":161,"title":{},"body":{"license.html":{},"coverage.html":{}}}],["dynam",{"_index":10,"title":{},"body":{"dependencies.html":{}}}],["elsewher",{"_index":91,"title":{},"body":{"index.html":{}}}],["emit",{"_index":79,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":43,"title":{},"body":{"index.html":{}}}],["enabletrac",{"_index":41,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["error",{"_index":260,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["error(...arg",{"_index":262,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["error(arg",{"_index":273,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["event",{"_index":194,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":52,"title":{},"body":{"index.html":{}}}],["export",{"_index":45,"title":{},"body":{"index.html":{},"overview.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["express",{"_index":187,"title":{},"body":{"license.html":{}}}],["f000180a",{"_index":305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":162,"title":{},"body":{"license.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["filter",{"_index":105,"title":{},"body":{"index.html":{}}}],["firmware_rev",{"_index":316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":129,"title":{},"body":{"index.html":{}}}],["fit",{"_index":190,"title":{},"body":{"license.html":{}}}],["follow",{"_index":178,"title":{},"body":{"license.html":{}}}],["forroot(opt",{"_index":231,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["free",{"_index":93,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":225,"title":{"miscellaneous/functions.html":{}},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["furnish",{"_index":176,"title":{},"body":{"license.html":{}}}],["gatt",{"_index":85,"title":{},"body":{"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":60,"title":{},"body":{"index.html":{}}}],["gatt_primary_servic",{"_index":62,"title":{},"body":{"index.html":{}}}],["get",{"_index":23,"title":{"index.html":{},"license.html":{}},"body":{}}],["getbatterylevel",{"_index":97,"title":{},"body":{"index.html":{}}}],["getdevic",{"_index":69,"title":{},"body":{"index.html":{}}}],["getfakevalu",{"_index":67,"title":{},"body":{"index.html":{}}}],["grant",{"_index":154,"title":{},"body":{"license.html":{}}}],["graph",{"_index":207,"title":{},"body":{"modules.html":{}}}],["gyroscop",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hardware_rev",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":50,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":153,"title":{},"body":{"license.html":{}}}],["holder",{"_index":196,"title":{},"body":{"license.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":255,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["humid",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifi",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notifi",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_statu",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":275,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["impli",{"_index":188,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["includ",{"_index":166,"title":{},"body":{"license.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":210,"title":{},"body":{"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["inject",{"_index":55,"title":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"index.html":{},"overview.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["injectiontoken",{"_index":214,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["injectiontoken('awbopt",{"_index":230,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["instanc",{"_index":284,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["interfac",{"_index":144,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"overview.html":{},"modules/WebBluetoothModule.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["io",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":15,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keypress",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":186,"title":{},"body":{"license.html":{}}}],["legend",{"_index":138,"title":{},"body":{"overview.html":{}}}],["level",{"_index":84,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":200,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":197,"title":{},"body":{"license.html":{}}}],["licens",{"_index":145,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":167,"title":{},"body":{"license.html":{}}}],["log",{"_index":44,"title":{},"body":{"index.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["log(...arg",{"_index":266,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["log(arg",{"_index":271,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["logger",{"_index":270,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["logger.servic",{"_index":222,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["logic",{"_index":87,"title":{},"body":{"index.html":{}}}],["magnetomet",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makemetokeninjector",{"_index":229,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["manekinekko/angular",{"_index":32,"title":{},"body":{"index.html":{}}}],["manifactur",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(valu",{"_index":81,"title":{},"body":{"index.html":{}}}],["match",{"_index":22,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"license.html":{},"modules.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"coverage.html":{}}}],["medium",{"_index":133,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":189,"title":{},"body":{"license.html":{}}}],["merg",{"_index":169,"title":{},"body":{"license.html":{}}}],["mergemap(characterist",{"_index":117,"title":{},"body":{"index.html":{}}}],["mergemap(gatt",{"_index":108,"title":{},"body":{"index.html":{}}}],["mergemap(primaryservic",{"_index":111,"title":{},"body":{"index.html":{}}}],["method",{"_index":71,"title":{},"body":{"index.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/Logger.html":{}}}],["miscellan",{"_index":293,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":26,"title":{},"body":{"index.html":{}}}],["mit",{"_index":146,"title":{},"body":{"license.html":{}}}],["mock",{"_index":286,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["model",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_numb",{"_index":312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":168,"title":{},"body":{"license.html":{}}}],["modul",{"_index":28,"title":{"modules.html":{},"modules/WebBluetoothModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/WebBluetoothModule.html":{}}}],["modulewithprovid",{"_index":213,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["more",{"_index":256,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["movement",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":247,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["navigator.bluetooth",{"_index":251,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["need",{"_index":127,"title":{},"body":{"index.html":{}}}],["new",{"_index":226,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"coverage.html":{}}}],["ngmodul",{"_index":39,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["nologgerservic",{"_index":221,"title":{"injectables/NoLoggerService.html":{}},"body":{"modules/WebBluetoothModule.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["noninfring",{"_index":193,"title":{},"body":{"license.html":{}}}],["notic",{"_index":181,"title":{},"body":{"license.html":{}}}],["now",{"_index":288,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["npm",{"_index":33,"title":{},"body":{"index.html":{}}}],["oad",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":287,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.keys(titag).map",{"_index":301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":56,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":157,"title":{},"body":{"license.html":{}}}],["option",{"_index":215,"title":{},"body":{"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["optionalservic",{"_index":106,"title":{},"body":{"index.html":{}}}],["options.enabletrac",{"_index":228,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["otherwis",{"_index":205,"title":{},"body":{"license.html":{}}}],["out",{"_index":143,"title":{},"body":{"overview.html":{},"license.html":{}}}],["overview",{"_index":137,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":246,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":191,"title":{},"body":{"license.html":{}}}],["period",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permiss",{"_index":152,"title":{},"body":{"license.html":{}}}],["permit",{"_index":175,"title":{},"body":{"license.html":{}}}],["person",{"_index":156,"title":{},"body":{"license.html":{}}}],["platform/brows",{"_index":219,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["pnp_id",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portion",{"_index":184,"title":{},"body":{"license.html":{}}}],["post",{"_index":131,"title":{},"body":{"index.html":{}}}],["pr",{"_index":134,"title":{},"body":{"index.html":{}}}],["privat",{"_index":238,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["process",{"_index":104,"title":{},"body":{"index.html":{}}}],["promis",{"_index":249,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["properti",{"_index":237,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"interfaces/AWBOptions.html":{}}}],["provid",{"_index":94,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["public",{"_index":65,"title":{},"body":{"index.html":{}}}],["publish",{"_index":170,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":192,"title":{},"body":{"license.html":{}}}],["read",{"_index":96,"title":{},"body":{"index.html":{}}}],["request",{"_index":95,"title":{},"body":{"index.html":{}}}],["request_new_paramet",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevic",{"_index":240,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(opt",{"_index":243,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceopt",{"_index":244,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["reset",{"_index":142,"title":{},"body":{"overview.html":{}}}],["restrict",{"_index":165,"title":{},"body":{"license.html":{}}}],["result",{"_index":21,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"license.html":{},"modules.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"coverage.html":{}}}],["return",{"_index":74,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["right",{"_index":120,"title":{},"body":{"index.html":{},"license.html":{}}}],["rxj",{"_index":17,"title":{},"body":{"dependencies.html":{}}}],["rxjs/observ",{"_index":57,"title":{},"body":{"index.html":{}}}],["s",{"_index":34,"title":{},"body":{"index.html":{}}}],["see",{"_index":123,"title":{},"body":{"index.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["sell",{"_index":174,"title":{},"body":{"license.html":{}}}],["sensortag2.t",{"_index":299,"title":{},"body":{"miscellaneous/variables.html":{},"coverage.html":{}}}],["serial_numb",{"_index":314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverwebbluetooth",{"_index":282,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["servic",{"_index":54,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["service/compon",{"_index":49,"title":{},"body":{"index.html":{}}}],["shall",{"_index":182,"title":{},"body":{"license.html":{}}}],["smart",{"_index":254,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["softwar",{"_index":159,"title":{},"body":{"license.html":{}}}],["software_rev",{"_index":320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourc",{"_index":211,"title":{},"body":{"modules/WebBluetoothModule.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}}}],["specif",{"_index":88,"title":{},"body":{"index.html":{}}}],["src/lib/bluetooth.module.t",{"_index":212,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["src/lib/bluetooth.module.ts:10",{"_index":289,"title":{},"body":{"interfaces/AWBOptions.html":{}}}],["src/lib/bluetooth.service.t",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["src/lib/lang/uuids/ti",{"_index":298,"title":{},"body":{"miscellaneous/variables.html":{},"coverage.html":{}}}],["src/lib/logger.service.t",{"_index":259,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{},"coverage.html":{}}}],["src/lib/logger.service.ts:11",{"_index":267,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["src/lib/logger.service.ts:14",{"_index":263,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["src/lib/logger.service.ts:17",{"_index":269,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["src/lib/logger.service.ts:24",{"_index":280,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["src/lib/logger.service.ts:25",{"_index":279,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["src/lib/logger.service.ts:26",{"_index":281,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["src/lib/logger.service.ts:4",{"_index":291,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/logger.service.ts:5",{"_index":290,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/logger.service.ts:6",{"_index":292,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/platform/browser.t",{"_index":236,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["src/lib/platform/browser.ts:15",{"_index":245,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["src/lib/platform/browser.ts:6",{"_index":242,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["src/lib/platform/server.t",{"_index":283,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["src/lib/platform/server.ts:6",{"_index":285,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["start",{"_index":24,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":124,"title":{},"body":{"index.html":{}}}],["state",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statement",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":59,"title":{},"body":{"index.html":{},"modules/WebBluetoothModule.html":{},"injectables/ServerWebBluetooth.html":{},"interfaces/AWBOptions.html":{}}}],["stream",{"_index":77,"title":{},"body":{"index.html":{}}}],["streamvalu",{"_index":76,"title":{},"body":{"index.html":{}}}],["string",{"_index":272,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["subject",{"_index":177,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":172,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":183,"title":{},"body":{"license.html":{}}}],["support",{"_index":253,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["system_id",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["temperatur",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._bl",{"_index":250,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this._ble.requestdevice(opt",{"_index":258,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.bl",{"_index":100,"title":{},"body":{"index.html":{}}}],["this.ble.fakenext",{"_index":68,"title":{},"body":{"index.html":{}}}],["this.ble.getcharacteristic$(primaryservic",{"_index":112,"title":{},"body":{"index.html":{}}}],["this.ble.getdevic",{"_index":75,"title":{},"body":{"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":109,"title":{},"body":{"index.html":{}}}],["this.ble.readvalue$(characterist",{"_index":118,"title":{},"body":{"index.html":{}}}],["this.ble.streamvalu",{"_index":80,"title":{},"body":{"index.html":{}}}],["throw",{"_index":252,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_servic",{"_index":296,"title":{},"body":{"miscellaneous/variables.html":{},"coverage.html":{}}}],["titag",{"_index":297,"title":{},"body":{"miscellaneous/variables.html":{},"coverage.html":{}}}],["titag[key].servic",{"_index":303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":204,"title":{},"body":{"license.html":{}}}],["tri",{"_index":99,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":102,"title":{},"body":{"index.html":{}}}],["true/fals",{"_index":42,"title":{},"body":{"index.html":{}}}],["type",{"_index":248,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"coverage.html":{}}}],["typerefer",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["types/web",{"_index":11,"title":{},"body":{"dependencies.html":{}}}],["us",{"_index":35,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactori",{"_index":232,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["usevalu",{"_index":233,"title":{},"body":{"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["valu",{"_index":78,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["value.getuint8(0",{"_index":82,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":295,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"coverage.html":{}}}],["void",{"_index":265,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["warn",{"_index":261,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["warn(...arg",{"_index":268,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["warn(arg",{"_index":274,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"interfaces/Logger.html":{}}}],["warranti",{"_index":185,"title":{},"body":{"license.html":{}}}],["wassim",{"_index":150,"title":{},"body":{"license.html":{}}}],["web",{"_index":27,"title":{},"body":{"index.html":{}}}],["webbluetoothmodul",{"_index":38,"title":{"modules/WebBluetoothModule.html":{}},"body":{"index.html":{},"modules.html":{},"modules/WebBluetoothModule.html":{},"interfaces/AWBOptions.html":{}}}],["webbluetoothmodule.forroot",{"_index":40,"title":{},"body":{"index.html":{}}}],["welcom",{"_index":136,"title":{},"body":{"index.html":{}}}],["whether",{"_index":201,"title":{},"body":{"license.html":{}}}],["without",{"_index":164,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":30,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":19,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":141,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @angular/animations : 5.2.9\n    \n        @angular/common : 5.2.9\n    \n        @angular/compiler : 5.2.9\n    \n        @angular/core : 5.2.9\n    \n        @angular/platform-browser : 5.2.9\n    \n        @angular/platform-browser-dynamic : 5.2.9\n    \n        @types/web-bluetooth : ^0.0.4\n    \n        core-js : ^2.5.3\n    \n        rxjs : ^5.5.5\n    \n        zone.js : ^0.8.4\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular \n\nYarn it\nyarn add @manekinekko/angular-web-bluetooth\nor NPM it\nnpm i -S @manekinekko/angular-web-bluetooth\nUse it\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true/false // enable logs\n    })\n  ],\n  //...\n})\nexport class AppModule { }\n2) use it in your service/component\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n\n@Injectable()\nexport class BatteryLevelService {\n\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(\n    public ble: BluetoothCore\n  ) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$()\n      .map(value => value.getUint8(0));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return {Observable} Emites the value of the requested service read from the device\n   */\n   getBatteryLevel(): Observable {\n    console.log('Getting Battery Service...');\n\n    try {\n        return this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({ filters: [], optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE] })\n\n          // 2) get that service\n          .mergeMap(gatt => this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE))\n\n          // 3) get a specific characteristic on that service\n          .mergeMap(primaryService => this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL))\n\n          // 4) ask for the value of that characteristic (will return a DataView)\n          .mergeMap(characteristic => this.ble.readValue$(characteristic))\n\n          // 5) on that DataView, get the right value\n          .map(value => value.getUint8(0));\n    }\n    catch(e) {\n      console.error('Oops! can not read value from %s');\n    }\n\n  }\n\n}See the starter for a complete use case.\nNeed a starter?\nYou can use this starter to start building your first Web Bluetooth module.\nBlog post\nCheckout my post on medium.\n\n  \n    \n  \n\n\nHave a PR?\nAll contributions are welcome ;)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n  Modules\n  WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/bluetooth.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore }   from './bluetooth.service';\nimport { BrowserWebBluetooth }   from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth()\n};\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  }\n  else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n    static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector, useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [\n            makeMeTokenInjector\n          ]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/platform/browser.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _ble\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        requestDevice\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/platform/browser.ts:6\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        requestDevice\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            requestDevice(options: RequestDeviceOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/platform/browser.ts:15\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                options\n                                                                \n                                                                    \n                                                                                RequestDeviceOptions\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _ble\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _ble:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/lib/platform/browser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n\n  private _ble;\n\n  constructor() {\n    this._ble = navigator.bluetooth;\n    if( !this._ble ) {\n      throw ('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.')\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this._ble.requestDevice(options);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logger.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        log\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        log\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            log(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable()\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logger.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        log\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        log\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            log(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable()\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/platform/server.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        instance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        instance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    instance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/platform/server.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     {}\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AWBOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/bluetooth.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enableTracing\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                    \n                                \n                                \n                                    \n                                        enableTracing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/bluetooth.module.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore }   from './bluetooth.service';\nimport { BrowserWebBluetooth }   from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth()\n};\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  }\n  else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n    static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector, useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [\n            makeMeTokenInjector\n          ]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Logger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(args: string[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                string[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        log\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            log(args: string[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:4\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                string[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(args: string[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/lib/logger.service.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                string[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable()\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth\n                        \n                        \n                            consoleLoggerServiceConfig\n                        \n                        \n                            makeMeTokenInjector\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/bluetooth.module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                browserWebBluetooth\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    browserWebBluetooth()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                consoleLoggerServiceConfig\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    consoleLoggerServiceConfig(options: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        options\n                                                        \n                                                            \n                                                                        typeReference\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                makeMeTokenInjector\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    makeMeTokenInjector()\n                        \n                    \n    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TI_SENSORAG_SERVICES\n                        \n                        \n                            TiTag\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/lang/uuids/ti-sensortag2.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TI_SENSORAG_SERVICES\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TI_SENSORAG_SERVICES:     \n    \n                        \n                    \n                        \n                            \n                                Default value : Object.keys(TiTag).map( (key) => TiTag[key].SERVICE )\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TiTag\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TiTag:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n    \n      DEVICE_INFORMATION : {\n        SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n        SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n        MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n        SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n        FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n        HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n        SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n        MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n        IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n        PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n      },\n    \n      BATTERY : {\n        SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n        LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n      },\n    \n      TEMPERATURE : {\n        SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n        DATA :                    'f000aa01-0451-4000-b000-000000000000',\n        CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n        PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n      },\n    \n      HUMIDITY : {\n        SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n        DATA :                    'f000aa21-0451-4000-b000-000000000000',\n        CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n        PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n      },\n    \n      BAROMETER : {\n        SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n        DATA :                    'f000aa41-0451-4000-b000-000000000000',\n        CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n        PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n      },\n    \n      // service not available in model CC2650\n      // ACCELEROMETER : {\n      //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n      //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n      //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n      //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n      // },\n    \n      // service not available in model CC2650\n      // MAGNETOMETER : {\n      //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n      //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n      //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n      //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n      // },\n    \n      // service not available in model CC2650\n      // GYROSCOPE : {\n      //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n      //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n      //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n      //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n      // },\n    \n      MOVEMENT : {\n        SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n        DATA :                    'f000aa81-0451-4000-b000-000000000000',\n        CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n        PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n      },\n    \n      LIGHT : {\n        SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n        DATA :                    'f000aa71-0451-4000-b000-000000000000',\n        CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n        PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n      },\n    \n      KEYPRESS : {\n        SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n        STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n      },\n    \n      __REGISTER__ : {\n        SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n        DATA :                    'f000ac01-0451-4000-b000-000000000000',\n        ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n        DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n      },\n    \n      CONTROL : {\n        SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n        CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n        REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n        DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n      },\n    \n      OAD : {\n        SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n        IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n        IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n        IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n        IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n      },\n    \n      IO : {\n        SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n        DATA :                    'f000aa65-0451-4000-b000-000000000000',\n        CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n      }\n    }\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/bluetooth.module.ts\n            \n            \n                interface\n            \n            \n                AWBOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                browserWebBluetooth\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                consoleLoggerServiceConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                makeMeTokenInjector\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/bluetooth.service.ts\n            \n            \n                injectable\n            \n            \n                BluetoothCore\n            \n            \n                17 %\n                (5/28)\n            \n        \n        \n            \n                \n                    src/lib/lang/uuids/ti-sensortag2.ts\n            \n            \n                variable\n            \n            \n                TI_SENSORAG_SERVICES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/lang/uuids/ti-sensortag2.ts\n            \n            \n                variable\n            \n            \n                TiTag\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/logger.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleLoggerService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/logger.service.ts\n            \n            \n                injectable\n            \n            \n                NoLoggerService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/logger.service.ts\n            \n            \n                interface\n            \n            \n                Logger\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/platform/browser.ts\n            \n            \n                injectable\n            \n            \n                BrowserWebBluetooth\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/platform/server.ts\n            \n            \n                injectable\n            \n            \n                ServerWebBluetooth\n            \n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
