var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AWBOptions.html",[0,0.782,1,1.566]],["body/interfaces/AWBOptions.html",[0,1.025,1,2.526,2,0.554,3,0.554,4,0.322,5,0.887,6,0.541,7,1.494,8,0.554,9,2.399,10,1.519,11,2.526,12,3.27,13,0.857,14,0.054,15,0.857,16,2.594,17,0.862,18,2.346,19,2.862,20,2.083,21,0.471,22,2.862,23,1.746,24,1.777,25,2.083,26,1.995,27,2.083,28,1.543,29,1.35,30,2.083,31,0.698,32,2.03,33,1.144,34,2.526,35,1.746,36,2.083,37,2.346,38,2.083,39,0.255,40,1.35,41,1.293,42,2.083,43,1.661,44,2.862,45,2.083,46,1.494,47,2.083,48,0.035,49,0.035]],["title/components/AppComponent.html",[50,1.566,51,1.355]],["body/components/AppComponent.html",[2,0.707,3,0.707,4,0.411,14,0.053,17,0.601,21,0.601,31,0.502,39,0.326,48,0.041,49,0.041,50,2.868,51,2.407,52,3.312,53,3.312,54,2.659,55,3.312,56,4.829,57,3.249,58,1.586,59,4.189,60,2.228,61,4.189,62,3.363,63,4.189,64,4.829,65,3.312,66,1.586,67,3.312,68,1.907,69,1.65,70,1.907,71,3.312]],["title/modules/AppModule.html",[72,0.898,73,1.355]],["body/modules/AppModule.html",[2,0.612,3,0.612,4,0.356,6,0.435,11,1.65,14,0.053,17,0.906,18,2.196,21,0.52,31,0.579,39,0.282,40,1.801,43,1.085,48,0.037,49,0.037,51,2.624,60,1.928,68,2.921,69,1.428,72,1.26,73,2.606,74,1.65,75,3.44,76,3.44,77,2.3,78,2.3,79,2.3,80,2.3,81,3.061,82,2.3,83,1.65,84,2.865,85,3.813,86,3.813,87,2.3,88,1.085,89,1.928,90,1.65,91,2.865,92,1.928,93,2.865,94,2.3,95,1.65]],["title/classes/AppPage.html",[39,0.268,96,1.83]],["body/classes/AppPage.html",[2,0.753,3,0.753,4,0.437,8,0.753,14,0.053,15,1.439,17,0.639,31,0.535,33,1.228,39,0.429,48,0.043,49,0.043,58,1.334,62,2.829,88,1.334,96,2.93,97,2.829,98,1.439,99,4.937,100,4.937,101,3.524,102,3.524,103,3.524,104,3.524,105,3.524,106,3.524]],["title/injectables/BatteryLevelService.html",[107,0.338,108,1.566]],["body/injectables/BatteryLevelService.html",[2,0.373,3,0.373,4,0.217,6,0.265,8,0.373,9,1.799,10,0.577,13,1.202,14,0.054,15,1.467,17,0.589,21,0.317,24,2.062,31,0.265,33,1.193,39,0.172,41,2.062,43,1.012,48,0.026,49,0.026,57,2.64,58,0.661,66,0.661,69,1.619,70,1.539,88,0.661,89,1.175,90,1.005,92,3.064,95,1.005,98,1.296,107,0.403,108,1.539,109,3.655,110,1.402,111,2.673,112,2.921,113,2.921,114,2.921,115,2.921,116,2.921,117,2.921,118,1.402,119,1.746,120,2.673,121,0.758,122,1.746,123,2.146,124,3.322,125,3.127,126,2.146,127,2.607,128,3.064,129,2.146,130,2.146,131,2.146,132,2.146,133,1.799,134,2.607,135,2.146,136,2.607,137,2.921,138,1.746,139,1.746,140,1.005,141,1.746,142,1.746,143,2.096,144,2.146,145,2.146,146,1.746,147,2.146,148,1.402,149,1.402,150,1.402,151,0.87,152,1.402,153,1.402,154,2.607,155,1.175,156,1.402,157,1.402,158,1.402,159,2.921,160,2.146,161,1.402,162,1.402,163,1.402,164,1.175,165,2.146,166,1.402,167,1.402,168,1.402,169,1.402,170,1.402,171,2.146,172,1.402,173,1.175,174,1.402,175,1.402,176,1.402,177,1.402,178,1.402,179,1.402,180,1.402,181,1.402,182,1.402,183,1.402,184,1.402,185,1.402,186,1.402,187,1.402,188,1.175,189,1.402,190,1.402,191,1.402,192,1.402,193,1.402]],["title/injectables/BrowserWebBluetooth.html",[26,1.18,107,0.338]],["body/injectables/BrowserWebBluetooth.html",[2,0.654,3,0.654,4,0.38,5,1.166,6,0.712,8,0.654,9,2.681,10,1.316,13,1.012,14,0.053,15,1.463,17,0.556,21,0.556,26,1.728,31,0.465,33,0.991,34,1.763,39,0.301,48,0.039,49,0.039,66,1.159,88,1.159,90,1.763,98,1.316,107,0.55,118,3.555,121,1.329,194,2.458,195,4.428,196,4.689,197,3.984,198,3.984,199,3.984,200,4.428,201,3.062,202,3.984,203,3.984,204,3.062,205,3.062,206,3.062,207,2.458,208,3.062,209,2.458,210,3.062,211,3.062,212,3.062,213,3.062]],["title/injectables/ConsoleLoggerService.html",[28,1.03,107,0.338]],["body/injectables/ConsoleLoggerService.html",[0,0.789,2,0.587,3,0.587,4,0.341,5,1.117,6,0.682,8,0.587,10,1.386,13,1.386,14,0.054,15,1.386,17,0.498,21,0.498,28,1.404,29,1.04,31,0.637,33,1.044,39,0.365,48,0.036,49,0.036,58,1.404,66,1.589,98,1.225,107,0.558,121,1.821,140,2.783,143,2.416,151,1.848,214,1.582,215,2.494,216,2.135,217,2.494,218,2.823,219,2.747,220,3.252,221,2.823,222,2.747,223,2.823,224,2.747,225,2.091,226,1.848,227,1.848,228,1.848,229,2.494,230,1.848,231,1.848,232,1.848]],["title/interfaces/Logger.html",[0,0.782,225,1.355]],["body/interfaces/Logger.html",[0,1.053,2,0.577,3,0.577,4,0.335,5,1.109,6,0.677,8,0.577,10,1.374,13,1.374,14,0.053,15,1.374,17,0.49,21,0.49,28,1.022,29,1.022,31,0.631,33,1.034,39,0.36,48,0.036,49,0.036,58,1.387,66,1.575,98,1.21,107,0.516,121,1.804,140,2.769,143,2.921,151,1.826,214,1.554,215,2.465,216,2.11,217,2.465,218,2.465,220,3.235,221,2.465,223,2.465,225,2.223,226,2.465,227,2.465,228,2.465,229,2.465,230,1.816,231,1.816,232,1.816,233,2.699,234,2.699,235,2.699]],["title/injectables/NoLoggerService.html",[29,1.03,107,0.338]],["body/injectables/NoLoggerService.html",[0,0.789,2,0.587,3,0.587,4,0.341,5,1.117,6,0.682,8,0.587,10,1.386,13,1.386,14,0.054,15,1.386,17,0.498,21,0.498,28,1.04,29,1.404,31,0.637,33,1.044,39,0.365,48,0.036,49,0.036,58,1.404,66,1.589,98,1.225,107,0.558,121,1.821,140,2.783,143,2.416,151,1.848,214,1.582,215,2.494,216,2.135,217,2.494,218,2.823,220,3.252,221,2.823,223,2.823,225,2.091,226,1.848,227,1.848,228,1.848,229,2.494,230,1.848,231,1.848,232,1.848,236,2.747,237,2.747,238,2.747]],["title/injectables/ServerWebBluetooth.html",[107,0.338,239,1.83]],["body/injectables/ServerWebBluetooth.html",[2,0.759,3,0.759,4,0.441,5,1.088,6,0.664,8,0.759,14,0.053,15,1.173,17,0.644,21,0.644,31,0.539,33,1.088,39,0.349,41,2.364,48,0.043,49,0.043,98,1.445,107,0.589,239,2.944,240,2.85,241,4.95,242,3.551,243,3.551,244,2.85,245,3.551]],["title/modules/WebBluetoothModule.html",[40,1.03,72,0.898]],["body/modules/WebBluetoothModule.html",[0,0.78,1,2.402,2,0.58,3,0.58,4,0.337,5,0.675,6,0.412,7,1.564,10,1.378,11,1.564,12,2.18,14,0.054,17,0.874,18,2.402,19,2.953,20,2.18,21,0.493,22,2.953,23,1.827,24,1.833,25,2.18,26,2.027,27,2.18,28,1.579,29,1.393,30,2.18,31,0.709,32,2.079,33,1.162,34,2.574,35,1.827,36,2.18,37,2.402,38,2.18,39,0.267,40,1.579,41,1.353,42,2.18,43,1.693,44,2.953,45,2.18,46,1.564,47,2.18,48,0.036,49,0.036,72,0.897]],["title/coverage.html",[246,2.956]],["body/coverage.html",[0,0.962,1,1.365,4,0.294,5,1.288,6,0.786,7,2.429,13,0.783,14,0.053,24,1.182,26,1.453,28,0.898,29,0.898,32,1.935,34,1.365,37,1.365,39,0.233,46,1.365,48,0.033,49,0.033,50,1.928,51,1.182,54,1.903,68,1.365,92,2.253,96,1.595,97,1.903,107,0.573,108,1.365,109,2.688,110,1.903,194,1.903,214,2.236,225,1.182,239,1.595,240,1.903,246,1.903,247,1.595,248,2.371,249,2.371,250,5.325,251,2.371,252,3.348,253,5.102,254,2.371,255,2.371,256,2.371,257,2.688,258,2.688,259,3.262,260,1.903,261,1.903,262,4.218,263,2.688,264,2.688,265,2.688,266,2.371,267,2.371,268,2.371,269,2.371,270,1.903,271,2.688,272,1.903,273,2.688,274,2.371,275,2.371]],["title/dependencies.html",[74,1.879,276,2.286]],["body/dependencies.html",[14,0.053,21,0.652,23,2.417,48,0.043,49,0.043,74,2.068,87,3.537,88,1.668,277,5.383,278,3.592,279,3.592,280,3.592,281,3.592,282,3.592,283,3.592,284,3.592,285,3.592,286,3.592,287,3.592,288,3.592,289,3.592]],["title/miscellaneous/functions.html",[32,1.626,290,1.316]],["body/miscellaneous/functions.html",[5,0.956,6,0.583,7,2.213,8,0.821,10,1.516,14,0.048,26,2.13,32,1.915,35,2.586,37,2.827,46,2.643,48,0.045,49,0.045,66,1.455,121,1.667,290,2.213,291,4.908,292,3.843]],["title/index.html",[8,0.488,293,1.835,294,1.538]],["body/index.html",[4,0.197,6,0.604,11,0.913,14,0.054,17,0.755,18,1.429,21,0.45,24,1.523,31,0.377,33,1.071,39,0.244,40,0.94,41,1.237,43,0.94,48,0.024,49,0.024,57,1.067,58,0.601,69,1.237,70,0.913,72,0.82,73,0.79,83,0.913,88,0.601,89,2.326,90,2.291,94,1.273,95,1.429,98,1.01,107,0.308,108,0.913,112,1.273,113,1.273,114,1.273,115,1.273,116,1.273,117,1.273,123,1.273,124,2.776,125,2.677,126,1.273,127,1.992,128,2.798,129,1.273,130,1.273,131,1.273,132,1.273,133,1.67,134,1.992,135,1.273,136,1.992,137,2.454,145,1.273,147,1.273,148,1.273,149,1.273,150,1.273,151,0.79,152,1.273,153,1.273,154,2.454,155,1.67,156,1.273,157,1.273,158,1.273,159,2.776,160,1.992,161,1.273,162,1.273,163,1.273,164,1.67,165,1.992,166,1.273,167,1.273,168,1.273,169,1.273,170,1.273,171,1.992,172,1.273,173,1.67,174,1.273,175,1.273,176,1.273,177,1.273,178,1.273,179,1.273,180,1.273,181,1.273,182,1.273,183,1.273,184,1.273,185,1.273,186,1.273,187,1.273,188,1.67,189,1.273,190,1.273,191,1.273,192,1.273,193,1.992,209,1.273,216,0.913,247,1.67,294,1.067,295,1.586,296,1.586,297,2.481,298,1.586,299,3.057,300,3.194,301,1.273,302,1.586,303,1.586,304,2.481,305,1.586,306,1.586,307,3.057,308,1.586,309,1.586,310,1.586,311,1.586,312,1.586,313,1.586,314,1.586,315,1.586,316,1.586,317,1.992,318,1.586,319,1.586,320,2.481,321,1.586,322,1.586,323,1.586,324,1.586,325,1.586,326,1.67,327,1.992,328,2.454,329,1.273,330,1.273,331,1.273,332,1.273,333,1.992,334,1.273,335,1.273,336,1.273,337,1.992,338,1.273,339,2.776,340,3.552,341,1.273,342,1.992,343,2.454,344,1.273,345,2.454,346,1.992,347,1.273,348,1.273,349,1.273,350,1.273,351,1.273,352,1.273,353,1.273,354,1.273,355,1.273,356,1.273,357,1.273,358,1.273,359,1.992,360,1.992,361,1.273,362,1.273,363,1.992,364,1.273,365,1.273,366,1.273,367,1.273,368,1.273,369,1.273,370,1.273,371,1.273,372,1.273,373,1.273,374,1.273,375,1.273,376,1.273,377,1.273,378,1.273,379,1.273,380,1.273,381,1.273,382,1.273,383,1.273,384,1.273]],["title/license.html",[293,1.835,294,1.538,326,1.538]],["body/license.html",[4,0.37,14,0.038,43,1.13,48,0.038,49,0.038,83,1.718,133,2.008,155,2.008,188,2.008,247,2.008,300,3.144,317,2.395,326,2.008,327,3.144,328,3.51,329,2.395,330,2.395,331,2.395,332,2.395,333,3.144,334,2.395,335,2.395,336,2.395,337,3.144,338,2.395,339,3.727,340,4.155,341,2.395,342,3.144,343,3.51,344,2.395,345,3.51,346,3.144,347,2.395,348,2.395,349,2.395,350,2.395,351,2.395,352,2.395,353,2.395,354,2.395,355,2.395,356,2.395,357,2.395,358,2.395,359,3.144,360,3.144,361,2.395,362,2.395,363,3.144,364,2.395,365,2.395,366,2.395,367,2.395,368,2.395,369,2.395,370,2.395,371,2.395,372,2.395,373,2.395,374,2.395,375,2.395,376,2.395,377,2.395,378,2.395,379,2.395,380,2.395,381,2.395,382,2.395,383,2.395,384,2.395]],["title/modules.html",[72,1.216]],["body/modules.html",[14,0.046,40,1.544,48,0.046,49,0.046,72,1.347,73,2.032,88,1.544,207,3.273,385,4.077,386,4.754,387,4.077,388,3.273]],["title/overview.html",[389,2.956]],["body/overview.html",[0,0.99,14,0.05,31,0.523,39,0.339,40,1.772,43,1.305,48,0.042,49,0.042,50,1.984,51,2.598,60,2.319,68,2.695,72,1.419,73,2.648,74,1.984,75,2.766,76,2.766,77,2.766,78,2.766,79,2.766,80,2.766,81,3.448,82,2.766,83,1.984,107,0.428,164,2.319,173,3.148,389,2.766,390,3.446]],["title/miscellaneous/variables.html",[259,2.196,290,1.316]],["body/miscellaneous/variables.html",[5,0.46,6,0.281,8,0.236,13,1.028,14,0.054,48,0.018,49,0.018,69,0.55,70,0.636,95,1.375,125,2.264,128,3.115,144,2.702,244,2.702,257,0.887,258,1.917,259,0.743,260,1.917,261,1.917,263,0.887,264,2.702,265,2.702,270,0.887,271,2.702,272,0.887,273,0.887,290,0.636,301,0.887,388,1.917,391,1.85,392,1.85,393,1.104,394,1.104,395,1.85,396,1.85,397,1.85,398,1.85,399,1.104,400,1.104,401,1.104,402,1.104,403,5.34,404,5.34,405,5.34,406,5.34,407,1.104,408,1.104,409,1.104,410,1.104,411,1.104,412,1.104,413,1.104,414,1.104,415,1.104,416,1.104,417,1.104,418,1.104,419,1.104,420,1.104,421,1.104,422,1.104,423,1.104,424,1.104,425,1.104,426,1.104,427,1.104,428,1.104,429,4.024,430,1.104,431,3.749,432,1.104,433,3.749,434,1.104,435,1.104,436,1.104,437,1.104,438,1.104,439,1.104,440,1.104,441,1.104,442,1.104,443,1.104,444,1.104,445,2.388,446,2.388,447,1.104,448,1.104,449,1.104,450,1.104,451,1.104,452,1.104,453,1.104,454,1.104,455,1.104,456,1.104,457,1.104,458,1.104,459,1.104,460,1.104,461,1.104,462,1.104,463,1.104,464,1.104,465,1.104,466,1.104,467,1.104,468,1.104,469,1.104,470,1.104,471,1.104,472,1.104,473,1.104,474,1.104,475,1.104,476,1.104,477,1.104,478,1.104,479,1.104,480,1.104,481,1.104,482,1.104,483,1.104,484,1.104,485,1.104,486,1.104,487,1.104,488,1.104,489,1.104,490,1.104,491,1.104,492,1.104,493,1.104,494,1.104,495,1.104,496,1.104,497,1.104,498,1.104,499,1.104,500,1.104,501,1.104,502,1.104,503,1.104,504,1.104,505,1.104]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["000000000000",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":164,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"overview.html":{}}}],["1/9",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":173,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":330,"title":{},"body":{"index.html":{},"license.html":{}}}],["3",{"_index":177,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["4",{"_index":182,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["4000",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":187,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["5/28",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":390,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["__register__",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_ble",{"_index":196,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["abov",{"_index":358,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":130,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["acceleromet",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceptalldevic",{"_index":169,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["action",{"_index":380,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_compon",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":298,"title":{},"body":{"index.html":{}}}],["address",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":352,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":296,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":23,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["annot",{"_index":305,"title":{},"body":{"index.html":{}}}],["api",{"_index":310,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":51,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":96,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["arg",{"_index":220,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["aris",{"_index":384,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":183,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["associ",{"_index":341,"title":{},"body":{"index.html":{},"license.html":{}}}],["author",{"_index":373,"title":{},"body":{"index.html":{},"license.html":{}}}],["avail",{"_index":388,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awbopt",{"_index":1,"title":{"interfaces/AWBOptions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["b000",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baromet",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["batteri",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["battery_level",{"_index":145,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["battery_servic",{"_index":147,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["batterylevelcompon",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservic",{"_index":108,"title":{"injectables/BatteryLevelService.html":{}},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{},"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":181,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["batterylevelservice.gatt_primary_servic",{"_index":171,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["ble",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["blog",{"_index":319,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"index.html":{}}}],["bluetooth.servic",{"_index":25,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.module.t",{"_index":7,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts:10",{"_index":16,"title":{},"body":{"interfaces/AWBOptions.html":{}}}],["bluetooth/src/lib/bluetooth.service.t",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["bluetooth/src/lib/lang/uuids/ti",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetooth/src/lib/logger.service.t",{"_index":214,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/logger.service.ts:13",{"_index":222,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:16",{"_index":219,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:19",{"_index":224,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:28",{"_index":237,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:29",{"_index":236,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:30",{"_index":238,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:4",{"_index":234,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:5",{"_index":233,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:6",{"_index":235,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/platform/browser.t",{"_index":194,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/browser.ts:14",{"_index":201,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/browser.ts:5",{"_index":198,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/server.t",{"_index":240,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/server.ts:5",{"_index":242,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["bluetooth/src/test.t",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcor",{"_index":24,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BatteryLevelService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{}}}],["bluetoothremotegattcharacterist",{"_index":185,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bluetoothremotegattserv",{"_index":175,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bluetoothremotegattservic",{"_index":179,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["boolean",{"_index":12,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":386,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get",{"_index":104,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":26,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["c",{"_index":329,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":154,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["can't",{"_index":129,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["case",{"_index":309,"title":{},"body":{"index.html":{}}}],["catch",{"_index":190,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["cc2650",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characterist",{"_index":124,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["charg",{"_index":336,"title":{},"body":{"index.html":{},"license.html":{}}}],["checkout",{"_index":321,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":332,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":376,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":39,"title":{"classes/AppPage.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["command",{"_index":318,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":22,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["complet",{"_index":308,"title":{},"body":{"index.html":{}}}],["compon",{"_index":50,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["condit",{"_index":357,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":155,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["console.error('oop",{"_index":192,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["console.error.apply(consol",{"_index":231,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.log('get",{"_index":161,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["console.log.apply(consol",{"_index":230,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.warn.apply(consol",{"_index":232,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["consoleloggerservic",{"_index":28,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["consoleloggerserviceconfig",{"_index":46,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["consoleloggerserviceconfig(opt",{"_index":35,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["constructor(bl",{"_index":119,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["constructor(publ",{"_index":152,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["context",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":381,"title":{},"body":{"index.html":{},"license.html":{}}}],["contribut",{"_index":324,"title":{},"body":{"index.html":{}}}],["control",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":339,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":328,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":246,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current_used_paramet",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":377,"title":{},"body":{"index.html":{},"license.html":{}}}],["data",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataview",{"_index":159,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["deal",{"_index":342,"title":{},"body":{"index.html":{},"license.html":{}}}],["declar",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":144,"title":{},"body":{"injectables/BatteryLevelService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}}}],["dep",{"_index":47,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["depend",{"_index":74,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":212,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["develop",{"_index":132,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["devic",{"_index":137,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["device_id",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_inform",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["disconnect_request",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discov",{"_index":165,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["discoveri",{"_index":167,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["distribut",{"_index":350,"title":{},"body":{"index.html":{},"license.html":{}}}],["document",{"_index":247,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":191,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["e2e/src/app.po.t",{"_index":97,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":102,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["element(by.css('app",{"_index":105,"title":{},"body":{"classes/AppPage.html":{}}}],["elsewher",{"_index":131,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["emit",{"_index":134,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["enabl",{"_index":302,"title":{},"body":{"index.html":{}}}],["enabletrac",{"_index":11,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["entrycompon",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":215,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error('your",{"_index":206,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["error(...arg",{"_index":218,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error(arg",{"_index":227,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["event",{"_index":372,"title":{},"body":{"index.html":{},"license.html":{}}}],["exampl",{"_index":306,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["f000180a",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fals",{"_index":301,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["firmware_rev",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fit",{"_index":368,"title":{},"body":{"index.html":{},"license.html":{}}}],["follow",{"_index":317,"title":{},"body":{"index.html":{},"license.html":{}}}],["forroot(opt",{"_index":42,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["free",{"_index":133,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["function",{"_index":32,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":355,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":123,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":112,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["gatt_primary_servic",{"_index":113,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["get",{"_index":293,"title":{"index.html":{},"license.html":{}},"body":{}}],["getbatterylevel",{"_index":114,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getdevic",{"_index":115,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getfakevalu",{"_index":116,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getparagraphtext",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["grant",{"_index":335,"title":{},"body":{"index.html":{},"license.html":{}}}],["graph",{"_index":387,"title":{},"body":{"modules.html":{}}}],["gyroscop",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h1')).gettext",{"_index":106,"title":{},"body":{"classes/AppPage.html":{}}}],["hardware_rev",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":304,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":334,"title":{},"body":{"index.html":{},"license.html":{}}}],["holder",{"_index":374,"title":{},"body":{"index.html":{},"license.html":{}}}],["html",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":210,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["https://manekinekko.github.io/angular",{"_index":312,"title":{},"body":{"index.html":{}}}],["humid",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifi",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notifi",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_statu",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":229,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["impli",{"_index":366,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["includ",{"_index":345,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{}}}],["inject",{"_index":107,"title":{"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injectiontoken",{"_index":20,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["injectiontoken('awbopt",{"_index":38,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["instanc",{"_index":241,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"overview.html":{}}}],["io",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["keypress",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":364,"title":{},"body":{"index.html":{},"license.html":{}}}],["legend",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["level",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["level.compon",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.t",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["level.service.t",{"_index":110,"title":{},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["level.service.ts:10",{"_index":120,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:12",{"_index":142,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:14",{"_index":139,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:18",{"_index":138,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:23",{"_index":141,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:35",{"_index":122,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:9",{"_index":146,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level/batteri",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["liabil",{"_index":378,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabl",{"_index":375,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":326,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":346,"title":{},"body":{"index.html":{},"license.html":{}}}],["log",{"_index":216,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["log(...arg",{"_index":221,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(arg",{"_index":226,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["logger",{"_index":225,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["logger.servic",{"_index":30,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["logic",{"_index":126,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["magnetomet",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makemetokeninjector",{"_index":37,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manekinekko/angular",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["manifactur",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":148,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["map((valu",{"_index":189,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["match",{"_index":49,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":322,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":367,"title":{},"body":{"index.html":{},"license.html":{}}}],["merg",{"_index":348,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":149,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((characterist",{"_index":184,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((gatt",{"_index":174,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((primaryservic",{"_index":178,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":98,"title":{},"body":{"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"index.html":{}}}],["miscellan",{"_index":290,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":295,"title":{},"body":{"index.html":{}}}],["mit",{"_index":327,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":243,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["model",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_numb",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":347,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":72,"title":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":19,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["more",{"_index":211,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["movement",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"miscellaneous/functions.html":{}}}],["navigateto",{"_index":100,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.bluetooth",{"_index":204,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["need",{"_index":313,"title":{},"body":{"index.html":{}}}],["new",{"_index":34,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["ngmodul",{"_index":18,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["nologgerservic",{"_index":29,"title":{"injectables/NoLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["noninfring",{"_index":371,"title":{},"body":{"index.html":{},"license.html":{}}}],["notic",{"_index":359,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":245,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["npm",{"_index":299,"title":{},"body":{"index.html":{}}}],["oad",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":244,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.keys(titag).map(key",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtain",{"_index":338,"title":{},"body":{"index.html":{},"license.html":{}}}],["option",{"_index":10,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["optionalservic",{"_index":170,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["options.enabletrac",{"_index":36,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["otherwis",{"_index":383,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":389,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":276,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":121,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":369,"title":{},"body":{"index.html":{},"license.html":{}}}],["period",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permiss",{"_index":333,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":354,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":337,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":172,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["platform/brows",{"_index":27,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["pnp_id",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portion",{"_index":362,"title":{},"body":{"index.html":{},"license.html":{}}}],["post",{"_index":320,"title":{},"body":{"index.html":{}}}],["pr",{"_index":323,"title":{},"body":{"index.html":{}}}],["privat",{"_index":195,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["process",{"_index":168,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["product",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":314,"title":{},"body":{"index.html":{}}}],["projects/.../bluetooth.module.t",{"_index":291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test.t",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ti",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/angular",{"_index":5,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promis",{"_index":202,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["protractor",{"_index":103,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":43,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":151,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["public",{"_index":111,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["publish",{"_index":349,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpos",{"_index":370,"title":{},"body":{"index.html":{},"license.html":{}}}],["read",{"_index":136,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["request",{"_index":135,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["request_new_paramet",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevic",{"_index":197,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(opt",{"_index":199,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceopt",{"_index":200,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requir",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restrict",{"_index":344,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":48,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":33,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["right",{"_index":188,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["root",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":316,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["rxjs/oper",{"_index":150,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["s",{"_index":193,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["see",{"_index":209,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"index.html":{}}}],["selector",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":353,"title":{},"body":{"index.html":{},"license.html":{}}}],["sensortag2.t",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serial_numb",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":315,"title":{},"body":{"index.html":{}}}],["serverwebbluetooth",{"_index":239,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["servic",{"_index":128,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service/compon",{"_index":303,"title":{},"body":{"index.html":{}}}],["shall",{"_index":360,"title":{},"body":{"index.html":{},"license.html":{}}}],["smart",{"_index":208,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["softwar",{"_index":340,"title":{},"body":{"index.html":{},"license.html":{}}}],["software_rev",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{}}}],["spec\\.t",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":127,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["src/.../environment.prod.t",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/batteri",{"_index":109,"title":{},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":294,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":307,"title":{},"body":{"index.html":{}}}],["state",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statement",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":41,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BatteryLevelService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["stream",{"_index":157,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["streamvalu",{"_index":117,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["string",{"_index":143,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["subject",{"_index":356,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicens",{"_index":351,"title":{},"body":{"index.html":{},"license.html":{}}}],["substanti",{"_index":361,"title":{},"body":{"index.html":{},"license.html":{}}}],["support",{"_index":207,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"modules.html":{}}}],["svg",{"_index":385,"title":{},"body":{"modules.html":{}}}],["system_id",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["temperatur",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templat",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this._bl",{"_index":203,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this._ble.requestdevice(opt",{"_index":213,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.bl",{"_index":163,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.fakenext",{"_index":153,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getcharacteristic$(primaryservic",{"_index":180,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getdevic",{"_index":156,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":176,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.readvalue$(characterist",{"_index":186,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.streamvalues$().pipe(map((valu",{"_index":158,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["throw",{"_index":205,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_servic",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag[key].servic",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":382,"title":{},"body":{"index.html":{},"license.html":{}}}],["tree",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["tri",{"_index":162,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["trigger",{"_index":166,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["true",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["us",{"_index":300,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactori",{"_index":44,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["usevalu",{"_index":45,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["valu",{"_index":125,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.getuint8(0",{"_index":160,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["var",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":259,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":140,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn",{"_index":217,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(...arg",{"_index":223,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(arg",{"_index":228,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warranti",{"_index":363,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":331,"title":{},"body":{"index.html":{},"license.html":{}}}],["web",{"_index":6,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["webbluetoothmodul",{"_index":40,"title":{"modules/WebBluetoothModule.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["webbluetoothmodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcom",{"_index":325,"title":{},"body":{"index.html":{}}}],["whether",{"_index":379,"title":{},"body":{"index.html":{},"license.html":{}}}],["without",{"_index":343,"title":{},"body":{"index.html":{},"license.html":{}}}],["x1f449",{"_index":311,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":297,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AWBOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enableTracing\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                    \n                                \n                                \n                                    \n                                        enableTracing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/angular-web-bluetooth/src/lib/bluetooth.module.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BatteryLevelComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                BatteryLevelComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WebBluetoothModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './battery-level/battery-level.component';\n\n@NgModule({\n  declarations: [AppComponent, BatteryLevelComponent],\n  entryComponents: [BatteryLevelComponent],\n  imports: [\n    BrowserModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BatteryLevelService.html":{"url":"injectables/BatteryLevelService.html","title":"injectable - BatteryLevelService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BatteryLevelService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/battery-level/battery-level.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ble\n                            \n                            \n                                    Static\n                                GATT_CHARACTERISTIC_BATTERY_LEVEL\n                            \n                            \n                                    Static\n                                GATT_PRIMARY_SERVICE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBatteryLevel\n                            \n                            \n                                getDevice\n                            \n                            \n                                getFakeValue\n                            \n                            \n                                streamValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/battery-level/battery-level.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    ble\n                                                  \n                                                        \n                                                                    BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBatteryLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:35\n                            \n                        \n\n                \n                    \n                            Get Battery Level GATT Characteristic value.\nThis logic is specific to this service, this is why we can't abstract it elsewhere.\nThe developer is free to provide any service, and characteristics she wants.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Emites the value of the requested service read from the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFakeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFakeValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nstreamValues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ble:     BluetoothCore\n\n                    \n                \n                    \n                        \n                            Type :     BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_CHARACTERISTIC_BATTERY_LEVEL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_CHARACTERISTIC_BATTERY_LEVEL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_level'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_PRIMARY_SERVICE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_PRIMARY_SERVICE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_service'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n          })\n          .pipe(\n            // 2) get that service\n            mergeMap((gatt: BluetoothRemoteGATTServer) => {\n              return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n            }),\n            // 3) get a specific characteristic on that service\n            mergeMap((primaryService: BluetoothRemoteGATTService) => {\n              return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n            }),\n            // 4) ask for the value of that characteristic (will return a DataView)\n            mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n              return this.ble.readValue$(characteristic);\n            }),\n            // 5) on that DataView, get the right value\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/platform/browser.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestDevice(options: RequestDeviceOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/platform/browser.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    RequestDeviceOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _ble:     \n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private _ble;\n\n  constructor() {\n    this._ble = navigator.bluetooth;\n    if (!this._ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this._ble.requestDevice(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:16\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \nwarn(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Logger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(args: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:5\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(args: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:4\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \nwarn(args: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:6\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:29\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:28\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \nwarn(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/logger.service.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/platform/server.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        instance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/angular-web-bluetooth/src/lib/platform/server.ts:5\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n  Modules\n  WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            \n                interface\n            \n            \n                AWBOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                browserWebBluetooth\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                consoleLoggerServiceConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            \n                function\n            \n            \n                makeMeTokenInjector\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/bluetooth.service.ts\n            \n            \n                injectable\n            \n            \n                BluetoothCore\n            \n            \n                17 %\n                (5/28)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            \n                variable\n            \n            \n                TI_SENSORAG_SERVICES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            \n                variable\n            \n            \n                TiTag\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleLoggerService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            \n                injectable\n            \n            \n                NoLoggerService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            \n                interface\n            \n            \n                Logger\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/platform/browser.ts\n            \n            \n                injectable\n            \n            \n                BrowserWebBluetooth\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/lib/platform/server.ts\n            \n            \n                injectable\n            \n            \n                ServerWebBluetooth\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/angular-web-bluetooth/src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/battery-level/battery-level.component.ts\n            \n            \n                component\n            \n            \n                BatteryLevelComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/battery-level/battery-level.service.ts\n            \n            \n                injectable\n            \n            \n                BatteryLevelService\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/animations : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            consoleLoggerServiceConfig   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            makeMeTokenInjector   (projects/.../bluetooth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-web-bluetooth/src/lib/bluetooth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            browserWebBluetooth\n                            \n                            \n                        \n                    \n                \n                \n                    \nbrowserWebBluetooth()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consoleLoggerServiceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nconsoleLoggerServiceConfig(options: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeMeTokenInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \nmakeMeTokenInjector()\n                    \n                \n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular \n\nYarn it\nyarn add @manekinekko/angular-web-bluetooth\nor NPM it\nnpm i -S @manekinekko/angular-web-bluetooth\nUse it\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true / false // enable logs\n    })\n  ]\n  //...\n})\nexport class AppModule {}2) use it in your service/component\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n          })\n          .pipe(\n            // 2) get that service\n            mergeMap((gatt: BluetoothRemoteGATTServer) => {\n              return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n            }),\n            // 3) get a specific characteristic on that service\n            mergeMap((primaryService: BluetoothRemoteGATTService) => {\n              return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n            }),\n            // 4) ask for the value of that characteristic (will return a DataView)\n            mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n              return this.ble.readValue$(characteristic);\n            }),\n            // 5) on that DataView, get the right value\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n}See the starter for a complete use case.\nAPI documentation\nHere &#x1F449; https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\nThis project serves also as a starter. Run the following command:\nnpm start\nBlog post\nCheckout my post on medium.\n\n  \n    \n  \n\n\nHave a PR?\nAll contributions are welcome ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            TI_SENSORAG_SERVICES   (projects/.../ti-sensortag2.ts)\n                        \n                        \n                            TiTag   (projects/.../ti-sensortag2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/angular-web-bluetooth/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    projects/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TI_SENSORAG_SERVICES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TI_SENSORAG_SERVICES:     \n\n                    \n                \n                    \n                        \n                            Default value : Object.keys(TiTag).map(key => TiTag[key].SERVICE)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TiTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TiTag:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
